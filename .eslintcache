[{"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx":"1","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts":"2","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx":"3","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx":"4","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx":"5","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx":"6","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts":"7","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts":"8","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts":"9","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx":"10","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx":"11","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx":"12","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx":"13","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts":"14","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx":"15","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx":"16","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx":"17","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx":"18","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx":"19","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx":"20","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx":"21","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx":"22","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx":"23","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx":"24","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx":"25","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx":"26","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts":"27","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx":"28","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx":"29","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts":"30","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts":"31","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts":"32","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts":"33","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts":"34","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts":"35","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts":"36"},{"size":678,"mtime":1609794652111,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1608876895992,"results":"39","hashOfConfig":"38"},{"size":2861,"mtime":1609876925096,"results":"40","hashOfConfig":"38"},{"size":292,"mtime":1609204568653,"results":"41","hashOfConfig":"38"},{"size":588,"mtime":1609045619889,"results":"42","hashOfConfig":"38"},{"size":316,"mtime":1609301194101,"results":"43","hashOfConfig":"38"},{"size":537,"mtime":1609133490955,"results":"44","hashOfConfig":"38"},{"size":652,"mtime":1609876913665,"results":"45","hashOfConfig":"38"},{"size":658,"mtime":1609213692759,"results":"46","hashOfConfig":"38"},{"size":793,"mtime":1609106587289,"results":"47","hashOfConfig":"38"},{"size":409,"mtime":1609103776097,"results":"48","hashOfConfig":"38"},{"size":532,"mtime":1609204745335,"results":"49","hashOfConfig":"38"},{"size":546,"mtime":1609204731072,"results":"50","hashOfConfig":"38"},{"size":786,"mtime":1609576492423,"results":"51","hashOfConfig":"38"},{"size":1077,"mtime":1609881201194,"results":"52","hashOfConfig":"38"},{"size":2661,"mtime":1609652543542,"results":"53","hashOfConfig":"38"},{"size":805,"mtime":1609564223339,"results":"54","hashOfConfig":"38"},{"size":530,"mtime":1609266417016,"results":"55","hashOfConfig":"38"},{"size":853,"mtime":1609657858251,"results":"56","hashOfConfig":"38"},{"size":647,"mtime":1609883903833,"results":"57","hashOfConfig":"38"},{"size":805,"mtime":1609564218656,"results":"58","hashOfConfig":"38"},{"size":1217,"mtime":1609905631693,"results":"59","hashOfConfig":"38"},{"size":4056,"mtime":1609616114952,"results":"60","hashOfConfig":"38"},{"size":987,"mtime":1609525784060,"results":"61","hashOfConfig":"38"},{"size":1567,"mtime":1609396915709,"results":"62","hashOfConfig":"38"},{"size":408,"mtime":1609395434622,"results":"63","hashOfConfig":"38"},{"size":588,"mtime":1609608096096,"results":"64","hashOfConfig":"38"},{"size":2292,"mtime":1609614319248,"results":"65","hashOfConfig":"38"},{"size":488,"mtime":1609661528487,"results":"66","hashOfConfig":"38"},{"size":1692,"mtime":1609893785984,"results":"67","hashOfConfig":"38"},{"size":296,"mtime":1609896048439,"results":"68","hashOfConfig":"38"},{"size":345,"mtime":1609896039520,"results":"69","hashOfConfig":"38"},{"size":546,"mtime":1609884527963,"results":"70","hashOfConfig":"38"},{"size":715,"mtime":1609896983294,"results":"71","hashOfConfig":"38"},{"size":458,"mtime":1609905152012,"results":"72","hashOfConfig":"38"},{"size":464,"mtime":1609905141363,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bocc8l",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx",[],["151","152"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx",[],["153","154"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx",["155"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx",["156","157"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DarkModeContext } from \"../../contexts\";\r\nimport { SolidBtn } from \"../_common/buttons/SolidBtn\";\r\nimport { TextBtn } from \"../_common/buttons/TextBtn\";\r\nimport { ChompTitle } from \"../_common/ChompTitle\";\r\nimport { NavbarContainer } from \"../_common/NavbarContainer\";\r\nimport \"./HomeNavbar.css\";\r\n\r\ninterface Props {\r\n  createClass: Function;\r\n}\r\n\r\nexport const HomeNavbar = (props: Props) => {\r\n  const darkModeCtx = useContext(DarkModeContext);\r\n  return (\r\n    <NavbarContainer>\r\n      <Link to=\"/classes\">\r\n        <ChompTitle />\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <SolidBtn>Landing</SolidBtn>\r\n      </Link>\r\n      <Link to=\"/classes/create-class\">\r\n        <SolidBtn>Create Class</SolidBtn>\r\n      </Link>\r\n    </NavbarContainer>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx",["158"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx",["159"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./GCSelectionOverlay.css\";\r\nimport { authedRequest } from \"../../utils/authedRequest\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { HTTPSCourseInfo } from \"../../types/httpsTypes\";\r\n\r\ninterface Props {\r\n  hidden: boolean;\r\n  accessToken: string;\r\n  user: firebase.User;\r\n  setHidden: Function;\r\n  updateFromClass: Function;\r\n}\r\nconst arr: HTTPSCourseInfo[] = [];\r\nexport const GCSelectionOverlay = (props: Props) => {\r\n  const { hidden, accessToken, user, setHidden, updateFromClass } = props;\r\n  const [courseData, setCourseData] = useState(arr);\r\n\r\n  useEffect(() => {\r\n    if (!hidden && accessToken.length > 0) {\r\n      authedRequest(user, \"/get-classes\", accessToken)\r\n        .then((value) => {\r\n          if (value.status === 200) {\r\n            //@ts-ignore\r\n            const cd = value.data as HTTPSCourseInfo[];\r\n            setCourseData(cd);\r\n          } else {\r\n            console.log(`ERROR: Something went wrong.`);\r\n            setCourseData(arr);\r\n            setHidden(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(`ERROR: ${err}`);\r\n          setCourseData(arr);\r\n          setHidden(true);\r\n        });\r\n    } else {\r\n      setHidden(true);\r\n    }\r\n  }, [hidden]);\r\n\r\n  const selectClass = (e: any, c: HTTPSCourseInfo) => {\r\n    e.preventDefault();\r\n    updateFromClass(c);\r\n    setHidden(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"selection-overlay\"\r\n      onClick={(e) => {\r\n        if (e.currentTarget === e.target) setHidden(true);\r\n      }}\r\n      style={{ display: hidden ? \"none\" : \"\" }}\r\n    >\r\n      {courseData.length !== 0 ? (\r\n        <div className=\"selection-box\">\r\n          <span className=\"med-txt box-title\">Active Classes</span>\r\n          {courseData.map((course, ix) => {\r\n            return (\r\n              <button\r\n                className=\"btn-reset overlay-btn\"\r\n                onClick={(e) => selectClass(e, course)}\r\n                key={ix}\r\n              >\r\n                {course.course.name} - {course.roster.length} People\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <Spinner parentSize={100} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts",["160"],"import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport { Thread, Class } from \"../types/firestoreTypes\";\r\n\r\n/**\r\n * Returns basic info for all of a user's classes (From their profile).\r\n *\r\n * Used primarily when a user goes to their dashboard.\r\n * @returns array of type Class\r\n */\r\nexport async function fetchClasses(user: firebase.User) {\r\n  return firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"email\", \"==\", user.email)\r\n    .get()\r\n    .then((res) => {\r\n      if (res.empty) return [];\r\n      return res.docs[0] //First doc is the users data\r\n        .data()\r\n        .classes.map((d: unknown) => (d as unknown) as Class);\r\n    })\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n}\r\n\r\n/**\r\n * Returns starting data when loading up a new class. (When you click on a class card)\r\n *\r\n * This includes a few of the most recent threads (Sorted by creation date).\r\n *\r\n * @returns array of type Thread (No replies inside, loaded on request)\r\n */\r\nexport async function fetchClass(classId: string) {\r\n  const db = firebase.firestore();\r\n  db.tran;\r\n  const threadDocs = await db\r\n    .collection(\"classes\")\r\n    .doc(classId)\r\n    .collection(\"threads\")\r\n    .orderBy(\"created\", \"desc\")\r\n    .limit(10)\r\n    .get()\r\n    .then((res) => {\r\n      if (res.empty) return [];\r\n      else return res.docs;\r\n    })\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n  const threads = threadDocs.map((doc) => (doc.data() as unknown) as Thread);\r\n  return threads;\r\n}\r\n\r\n/**\r\n * Returns a few replies in a thread (Paginate when necessary).\r\n * @returns a Thread object\r\n */\r\nexport async function fetchThread(classId: string, threadId: string) {}\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":24,"column":6,"nodeType":"169","endLine":24,"endColumn":12,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":17},{"ruleId":"171","severity":1,"message":"175","line":15,"column":9,"nodeType":"173","messageId":"174","endLine":15,"endColumn":20},{"ruleId":"167","severity":1,"message":"176","line":27,"column":6,"nodeType":"169","endLine":27,"endColumn":8,"suggestions":"177"},{"ruleId":"167","severity":1,"message":"178","line":42,"column":6,"nodeType":"169","endLine":42,"endColumn":14,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":4,"column":25,"nodeType":"173","messageId":"174","endLine":4,"endColumn":32},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'classesCtx'. Either include it or remove the dependency array.","ArrayExpression",["183"],"@typescript-eslint/no-unused-vars","'TextBtn' is defined but never used.","Identifier","unusedVar","'darkModeCtx' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'classId'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'accessToken', 'setHidden', and 'user'. Either include them or remove the dependency array.",["185"],"'Message' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [classesCtx, user]",{"range":"192","text":"193"},"Update the dependencies array to be: [classId]",{"range":"194","text":"195"},"Update the dependencies array to be: [accessToken, hidden, setHidden, user]",{"range":"196","text":"197"},[680,686],"[classesCtx, user]",[907,909],"[classId]",[1319,1327],"[accessToken, hidden, setHidden, user]"]