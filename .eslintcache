[{"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx":"1","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts":"2","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx":"3","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx":"4","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx":"5","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx":"6","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts":"7","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts":"8","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts":"9","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx":"10","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx":"11","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx":"12","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx":"13","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts":"14","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx":"15","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx":"16","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx":"17","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx":"18","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx":"19","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx":"20","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx":"21","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx":"22","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx":"23","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx":"24","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx":"25","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx":"26","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts":"27","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx":"28","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx":"29","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts":"30","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts":"31","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts":"32","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts":"33","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts":"34","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts":"35","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts":"36","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\googleClassroomSlice.ts":"37","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\rosterSlice.ts":"38","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\actionCreators.ts":"39","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\selectors.ts":"40","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateStateNoRepeats.ts":"41","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ThreadCard.tsx":"42","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\FilterOptions.tsx":"43","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\NewThread.tsx":"44","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ChompThread.tsx":"45","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\firestoreFunction.ts":"46","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadNavbar.tsx":"47","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadInfo.tsx":"48","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\creationDateToString.ts":"49","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\MessagesSection.tsx":"50","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\Message.tsx":"51","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\CreateThread.tsx":"52","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\TagBtn.tsx":"53","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\MessageDisplay.tsx":"54","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\MarkdownRenderer.tsx":"55","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\autoFormatMarkdown.ts":"56"},{"size":678,"mtime":1610241141230,"results":"57","hashOfConfig":"58"},{"size":425,"mtime":1608876895992,"results":"59","hashOfConfig":"58"},{"size":3200,"mtime":1610299843969,"results":"60","hashOfConfig":"58"},{"size":292,"mtime":1609204568653,"results":"61","hashOfConfig":"58"},{"size":588,"mtime":1609045619889,"results":"62","hashOfConfig":"58"},{"size":375,"mtime":1610177504263,"results":"63","hashOfConfig":"58"},{"size":796,"mtime":1610508236183,"results":"64","hashOfConfig":"58"},{"size":434,"mtime":1610040662195,"results":"65","hashOfConfig":"58"},{"size":658,"mtime":1609213692759,"results":"66","hashOfConfig":"58"},{"size":793,"mtime":1609106587289,"results":"67","hashOfConfig":"58"},{"size":409,"mtime":1609103776097,"results":"68","hashOfConfig":"58"},{"size":532,"mtime":1609204745335,"results":"69","hashOfConfig":"58"},{"size":546,"mtime":1609204731072,"results":"70","hashOfConfig":"58"},{"size":1526,"mtime":1609950239822,"results":"71","hashOfConfig":"58"},{"size":974,"mtime":1610332985222,"results":"72","hashOfConfig":"58"},{"size":2912,"mtime":1610304912979,"results":"73","hashOfConfig":"58"},{"size":821,"mtime":1610067126219,"results":"74","hashOfConfig":"58"},{"size":530,"mtime":1609266417016,"results":"75","hashOfConfig":"58"},{"size":651,"mtime":1610044525313,"results":"76","hashOfConfig":"58"},{"size":645,"mtime":1610080754955,"results":"77","hashOfConfig":"58"},{"size":805,"mtime":1610044364978,"results":"78","hashOfConfig":"58"},{"size":1464,"mtime":1610263833004,"results":"79","hashOfConfig":"58"},{"size":4027,"mtime":1610319643004,"results":"80","hashOfConfig":"58"},{"size":987,"mtime":1609525784060,"results":"81","hashOfConfig":"58"},{"size":1567,"mtime":1609396915709,"results":"82","hashOfConfig":"58"},{"size":408,"mtime":1609395434622,"results":"83","hashOfConfig":"58"},{"size":640,"mtime":1609977366921,"results":"84","hashOfConfig":"58"},{"size":2280,"mtime":1609999890175,"results":"85","hashOfConfig":"58"},{"size":613,"mtime":1610119290340,"results":"86","hashOfConfig":"58"},{"size":3743,"mtime":1610309587838,"results":"87","hashOfConfig":"58"},{"size":296,"mtime":1609896048439,"results":"88","hashOfConfig":"58"},{"size":579,"mtime":1609951050162,"results":"89","hashOfConfig":"58"},{"size":794,"mtime":1610309510733,"results":"90","hashOfConfig":"58"},{"size":2050,"mtime":1610309952440,"results":"91","hashOfConfig":"58"},{"size":1248,"mtime":1610319944142,"results":"92","hashOfConfig":"58"},{"size":429,"mtime":1610039974829,"results":"93","hashOfConfig":"58"},{"size":1335,"mtime":1610068982523,"results":"94","hashOfConfig":"58"},{"size":612,"mtime":1610039983478,"results":"95","hashOfConfig":"58"},{"size":1637,"mtime":1610309773525,"results":"96","hashOfConfig":"58"},{"size":1193,"mtime":1610333071141,"results":"97","hashOfConfig":"58"},{"size":399,"mtime":1610068588339,"results":"98","hashOfConfig":"58"},{"size":1610,"mtime":1610261048083,"results":"99","hashOfConfig":"58"},{"size":426,"mtime":1610171376312,"results":"100","hashOfConfig":"58"},{"size":734,"mtime":1610310169848,"results":"101","hashOfConfig":"58"},{"size":1131,"mtime":1610334048383,"results":"102","hashOfConfig":"58"},{"size":1134,"mtime":1610320135367,"results":"103","hashOfConfig":"58"},{"size":637,"mtime":1610256876108,"results":"104","hashOfConfig":"58"},{"size":862,"mtime":1610343825170,"results":"105","hashOfConfig":"58"},{"size":1122,"mtime":1610258300553,"results":"106","hashOfConfig":"58"},{"size":833,"mtime":1610334104461,"results":"107","hashOfConfig":"58"},{"size":1414,"mtime":1610333726229,"results":"108","hashOfConfig":"58"},{"size":2877,"mtime":1610395314311,"results":"109","hashOfConfig":"58"},{"size":549,"mtime":1610317472614,"results":"110","hashOfConfig":"58"},{"size":2182,"mtime":1610492453014,"results":"111","hashOfConfig":"58"},{"size":886,"mtime":1610499281520,"results":"112","hashOfConfig":"58"},{"size":3827,"mtime":1610516562426,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1bocc8l",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx",[],["233","234"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx",[],["235","236"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx",["237"],"import React, { useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./Home.css\";\r\nimport { HomeNavbar } from \"./HomeNavbar\";\r\nimport { ClassCard } from \"./ClassCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadAllClasses } from \"../../redux/classesSlice\";\r\nimport { getClasses } from \"../../redux/selectors\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nexport const Home = (props: Props) => {\r\n  const classes = useSelector(getClasses);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    window.scroll({ top: 0 });\r\n    if (!classes || classes.length === 0) dispatch(loadAllClasses());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <HomeNavbar />\r\n      <div className=\"home-body\">\r\n        <div className=\"class-card-display\">\r\n          {classes.map((c, cIx) => {\r\n            return <ClassCard classInfo={c} key={cIx} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx",["238"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./ChompClass.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { ClassNavbar } from \"./ClassNavbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getClassById, getThreads } from \"../../redux/selectors\";\r\nimport { loadClass } from \"../../redux/classesSlice\";\r\nimport { ThreadCard } from \"./ThreadCard\";\r\nimport { FilterOptions } from \"./FilterOptions\";\r\nimport { NewThread } from \"./NewThread\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nexport const ChompClass = (props: Props) => {\r\n  //@ts-ignore\r\n  const { classId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const threads = useSelector(getThreads(classId));\r\n  const currentClass = useSelector(getClassById(classId));\r\n  useEffect(() => {\r\n    dispatch(loadClass(classId));\r\n  }, []);\r\n  return currentClass ? (\r\n    <div className=\"class-page\">\r\n      <ClassNavbar classData={currentClass} />\r\n      <div className=\"class-content\">\r\n        <FilterOptions classData={currentClass} />\r\n        <ul className=\"threads-list\">\r\n          <NewThread />\r\n          {threads.map((t, tIx) => (\r\n            <ThreadCard threadId={t.id} key={tIx} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx",["239"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./GCSelectionOverlay.css\";\r\nimport { authedRequest } from \"../../utils/authedRequest\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { HTTPSCourseInfo } from \"../../types/httpsTypes\";\r\n\r\ninterface Props {\r\n  hidden: boolean;\r\n  accessToken: string;\r\n  user: firebase.User;\r\n  setHidden: Function;\r\n  updateFromClass: Function;\r\n}\r\nconst arr: HTTPSCourseInfo[] = [];\r\nexport const GCSelectionOverlay = (props: Props) => {\r\n  const { hidden, accessToken, setHidden, updateFromClass } = props;\r\n  const [courseData, setCourseData] = useState(arr);\r\n\r\n  useEffect(() => {\r\n    if (!hidden && accessToken.length > 0) {\r\n      authedRequest(\"/get-classes\", accessToken)\r\n        .then((value) => {\r\n          if (value.status === 200) {\r\n            //@ts-ignore\r\n            const cd = value.data as HTTPSCourseInfo[];\r\n            setCourseData(cd);\r\n          } else {\r\n            console.log(`ERROR: Something went wrong.`);\r\n            setCourseData(arr);\r\n            setHidden(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(`ERROR: ${err}`);\r\n          setCourseData(arr);\r\n          setHidden(true);\r\n        });\r\n    } else {\r\n      setHidden(true);\r\n    }\r\n  }, [hidden]);\r\n\r\n  const selectClass = (e: any, c: HTTPSCourseInfo) => {\r\n    e.preventDefault();\r\n    updateFromClass(c);\r\n    setHidden(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"selection-overlay\"\r\n      onClick={(e) => {\r\n        if (e.currentTarget === e.target) setHidden(true);\r\n      }}\r\n      style={{ display: hidden ? \"none\" : \"\" }}\r\n    >\r\n      {courseData.length !== 0 ? (\r\n        <div className=\"selection-box\">\r\n          <span className=\"med-txt box-title\">Active Classes</span>\r\n          {courseData.map((course, ix) => {\r\n            return (\r\n              <button\r\n                className=\"btn-reset overlay-btn\"\r\n                onClick={(e) => selectClass(e, course)}\r\n                key={ix}\r\n              >\r\n                {course.course.name} - {course.roster.length} People\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <Spinner parentSize={100} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\googleClassroomSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\rosterSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\actionCreators.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\selectors.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateStateNoRepeats.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ThreadCard.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\FilterOptions.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\NewThread.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ChompThread.tsx",["240"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getThreadById } from \"../../redux/selectors\";\r\nimport { Footer } from \"../_common/Footer\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport \"./ChompThread.css\";\r\nimport { MessagesSection } from \"./MessagesSection\";\r\nimport { ThreadInfo } from \"./ThreadInfo\";\r\nimport { ThreadNavbar } from \"./ThreadNavbar\";\r\n\r\ninterface Props {}\r\n\r\nexport const ChompThread = (props: Props) => {\r\n  //@ts-ignore\r\n  const { threadId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const thread = useSelector(getThreadById(threadId));\r\n  useEffect(() => {\r\n    //Fetch thread + messages action\r\n  });\r\n  return thread ? (\r\n    <>\r\n      <div className=\"thread-page\">\r\n        <ThreadNavbar thread={thread} />\r\n        <div className=\"thread-page-content\">\r\n          <ThreadInfo thread={thread} />\r\n          <MessagesSection />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\firestoreFunction.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadInfo.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\creationDateToString.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\MessagesSection.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\Message.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\CreateThread.tsx",["241"],"/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { loadOnlyClass } from \"../../redux/classesSlice\";\r\nimport { getClassById } from \"../../redux/selectors\";\r\nimport { addNewThread } from \"../../redux/threadsSlice\";\r\nimport { FormField } from \"../createClass/FormField\";\r\nimport { SolidBtn } from \"../_common/buttons/SolidBtn\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport \"./CreateThread.css\";\r\nimport { MessageDisplay } from \"./MessageDisplay\";\r\nimport { TagBtn } from \"./TagBtn\";\r\n\r\ninterface Props {}\r\n\r\nexport const CreateThread = (props: Props) => {\r\n  //@ts-ignore\r\n  const { classId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const c = useSelector(getClassById(classId));\r\n  const [title, setTitle] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [tags, setTags] = useState([] as string[]);\r\n  const [preview, setPreview] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadOnlyClass(classId));\r\n  }, []);\r\n\r\n  const createNewThread = async () => {\r\n    dispatch(\r\n      addNewThread({\r\n        classId: classId,\r\n        title: title.trim(),\r\n        message: message.trim(),\r\n        tags,\r\n      })\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param b value ? add tag to list : remove tag from list\r\n   */\r\n  const toggleTag = (b: boolean, tag: string) => {\r\n    if (b) {\r\n      const newList = [...tags];\r\n      newList.push(tag);\r\n      setTags(newList);\r\n    } else setTags(tags.filter((t) => t !== tag));\r\n  };\r\n\r\n  return c ? (\r\n    <div className=\"create-thread-page\">\r\n      <div className=\"create-thread-container\">\r\n        <FormField\r\n          currentValue={title}\r\n          handleChange={setTitle}\r\n          required\r\n          children=\"Thread Title\"\r\n        />\r\n        <MessageDisplay value={message} setValue={setMessage} />\r\n        <div className=\"tag-section\">\r\n          <div className=\"bold\" style={{ paddingBottom: 10 }}>\r\n            Tags\r\n          </div>\r\n          <div className=\"tag-list\">\r\n            {c.tags?.map((t, tIx) => (\r\n              <TagBtn key={tIx} tag={t} toggleTag={(b) => toggleTag(b, t)} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"anonymous-section\">\r\n          <span className=\"bold\">Appear Anonymous*</span>\r\n          <br />{\" \"}\r\n          <span className=\"tiny-txt\">\r\n            *Administrators can choose to view anonymous posts, but they will\r\n            still count towards participation.\r\n          </span>\r\n        </div>\r\n        <SolidBtn filled onClick={async () => await createNewThread()}>\r\n          Create Thread\r\n        </SolidBtn>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\TagBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\MessageDisplay.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\MarkdownRenderer.tsx",["242"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\autoFormatMarkdown.ts",["243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"244","replacedBy":"248"},{"ruleId":"246","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":20,"column":6,"nodeType":"252","endLine":20,"endColumn":8,"suggestions":"253"},{"ruleId":"250","severity":1,"message":"254","line":27,"column":6,"nodeType":"252","endLine":27,"endColumn":8,"suggestions":"255"},{"ruleId":"250","severity":1,"message":"256","line":42,"column":6,"nodeType":"252","endLine":42,"endColumn":14,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":17,"column":9,"nodeType":"260","messageId":"261","endLine":17,"endColumn":17},{"ruleId":"250","severity":1,"message":"254","line":29,"column":6,"nodeType":"252","endLine":29,"endColumn":8,"suggestions":"262"},{"ruleId":"258","severity":1,"message":"263","line":16,"column":11,"nodeType":"260","messageId":"261","endLine":16,"endColumn":19},{"ruleId":"258","severity":1,"message":"264","line":98,"column":7,"nodeType":"260","messageId":"261","endLine":98,"endColumn":22},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],["265"],["266"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["267"],"React Hook useEffect has missing dependencies: 'classId' and 'dispatch'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'accessToken' and 'setHidden'. Either include them or remove the dependency array.",["269"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["270"],"'darkMode' is assigned a value but never used.","'handleBackspace' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"273","fix":"277"},"Update the dependencies array to be: [classes, dispatch]",{"range":"278","text":"279"},"Update the dependencies array to be: [classId, dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [accessToken, hidden, setHidden]",{"range":"282","text":"283"},{"range":"284","text":"281"},[654,656],"[classes, dispatch]",[952,954],"[classId, dispatch]",[1307,1315],"[accessToken, hidden, setHidden]",[1131,1133]]