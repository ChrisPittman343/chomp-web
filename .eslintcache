[{"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx":"1","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts":"2","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx":"3","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx":"4","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx":"5","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx":"6","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts":"7","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts":"8","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts":"9","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx":"10","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx":"11","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx":"12","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx":"13","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts":"14","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx":"15","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx":"16","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx":"17","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx":"18","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx":"19","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx":"20","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx":"21","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx":"22","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx":"23","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx":"24","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx":"25","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx":"26","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts":"27","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx":"28","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx":"29","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts":"30","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts":"31","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts":"32","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts":"33","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts":"34","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts":"35","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts":"36","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\googleClassroomSlice.ts":"37","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\rosterSlice.ts":"38","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\actionCreators.ts":"39","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\selectors.ts":"40","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateStateNoRepeats.ts":"41","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ThreadCard.tsx":"42","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\FilterOptions.tsx":"43","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\NewThread.tsx":"44","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ChompThread.tsx":"45","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\firestoreFunction.ts":"46","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadNavbar.tsx":"47","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadInfo.tsx":"48","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\creationDateToString.ts":"49","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\MessagesSection.tsx":"50","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\Message.tsx":"51","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\CreateThread.tsx":"52","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\TagBtn.tsx":"53","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\MessageDisplay.tsx":"54","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\MarkdownRenderer.tsx":"55","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\autoFormatMarkdown.ts":"56","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ReplySection.tsx":"57","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\StyledToggle.tsx":"58","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateFirestore.ts":"59","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ThreadTag.tsx":"60"},{"size":678,"mtime":1610870472551,"results":"61","hashOfConfig":"62"},{"size":425,"mtime":1608876895992,"results":"63","hashOfConfig":"62"},{"size":3170,"mtime":1610859701551,"results":"64","hashOfConfig":"62"},{"size":292,"mtime":1609204568653,"results":"65","hashOfConfig":"62"},{"size":588,"mtime":1609045619889,"results":"66","hashOfConfig":"62"},{"size":375,"mtime":1610177504263,"results":"67","hashOfConfig":"62"},{"size":916,"mtime":1610644284124,"results":"68","hashOfConfig":"62"},{"size":434,"mtime":1610040662195,"results":"69","hashOfConfig":"62"},{"size":658,"mtime":1609213692759,"results":"70","hashOfConfig":"62"},{"size":793,"mtime":1609106587289,"results":"71","hashOfConfig":"62"},{"size":409,"mtime":1609103776097,"results":"72","hashOfConfig":"62"},{"size":532,"mtime":1609204745335,"results":"73","hashOfConfig":"62"},{"size":546,"mtime":1610939591252,"results":"74","hashOfConfig":"62"},{"size":1526,"mtime":1609950239822,"results":"75","hashOfConfig":"62"},{"size":936,"mtime":1610870865395,"results":"76","hashOfConfig":"62"},{"size":2912,"mtime":1610304912979,"results":"77","hashOfConfig":"62"},{"size":821,"mtime":1610067126219,"results":"78","hashOfConfig":"62"},{"size":530,"mtime":1609266417016,"results":"79","hashOfConfig":"62"},{"size":633,"mtime":1610551321549,"results":"80","hashOfConfig":"62"},{"size":645,"mtime":1610080754955,"results":"81","hashOfConfig":"62"},{"size":805,"mtime":1610044364978,"results":"82","hashOfConfig":"62"},{"size":1550,"mtime":1610870865922,"results":"83","hashOfConfig":"62"},{"size":4235,"mtime":1610864440374,"results":"84","hashOfConfig":"62"},{"size":987,"mtime":1609525784060,"results":"85","hashOfConfig":"62"},{"size":1567,"mtime":1609396915709,"results":"86","hashOfConfig":"62"},{"size":408,"mtime":1609395434622,"results":"87","hashOfConfig":"62"},{"size":640,"mtime":1609977366921,"results":"88","hashOfConfig":"62"},{"size":2280,"mtime":1609999890175,"results":"89","hashOfConfig":"62"},{"size":766,"mtime":1610598431597,"results":"90","hashOfConfig":"62"},{"size":3915,"mtime":1610918591695,"results":"91","hashOfConfig":"62"},{"size":296,"mtime":1610860891249,"results":"92","hashOfConfig":"62"},{"size":579,"mtime":1610870963839,"results":"93","hashOfConfig":"62"},{"size":794,"mtime":1610309510733,"results":"94","hashOfConfig":"62"},{"size":2613,"mtime":1610864887512,"results":"95","hashOfConfig":"62"},{"size":1852,"mtime":1610889110990,"results":"96","hashOfConfig":"62"},{"size":1215,"mtime":1610729937184,"results":"97","hashOfConfig":"62"},{"size":1335,"mtime":1610068982523,"results":"98","hashOfConfig":"62"},{"size":612,"mtime":1610039983478,"results":"99","hashOfConfig":"62"},{"size":2051,"mtime":1610864322467,"results":"100","hashOfConfig":"62"},{"size":1678,"mtime":1610938078001,"results":"101","hashOfConfig":"62"},{"size":399,"mtime":1610068588339,"results":"102","hashOfConfig":"62"},{"size":1754,"mtime":1610955845524,"results":"103","hashOfConfig":"62"},{"size":426,"mtime":1610171376312,"results":"104","hashOfConfig":"62"},{"size":734,"mtime":1610310169848,"results":"105","hashOfConfig":"62"},{"size":1224,"mtime":1610938470178,"results":"106","hashOfConfig":"62"},{"size":1685,"mtime":1610916399092,"results":"107","hashOfConfig":"62"},{"size":734,"mtime":1610598426588,"results":"108","hashOfConfig":"62"},{"size":1085,"mtime":1610955867157,"results":"109","hashOfConfig":"62"},{"size":1122,"mtime":1610258300553,"results":"110","hashOfConfig":"62"},{"size":1622,"mtime":1610938476587,"results":"111","hashOfConfig":"62"},{"size":3259,"mtime":1610950605858,"results":"112","hashOfConfig":"62"},{"size":3328,"mtime":1610939562986,"results":"113","hashOfConfig":"62"},{"size":549,"mtime":1610317472614,"results":"114","hashOfConfig":"62"},{"size":2217,"mtime":1610924492359,"results":"115","hashOfConfig":"62"},{"size":999,"mtime":1610645553940,"results":"116","hashOfConfig":"62"},{"size":4688,"mtime":1610644293868,"results":"117","hashOfConfig":"62"},{"size":1724,"mtime":1610745245727,"results":"118","hashOfConfig":"62"},{"size":1027,"mtime":1610924443507,"results":"119","hashOfConfig":"62"},{"size":1535,"mtime":1610956405049,"results":"120","hashOfConfig":"62"},{"size":457,"mtime":1610955900978,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1bocc8l",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx",[],["251","252"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx",[],["253","254"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx",["255"],"import React, { useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./Home.css\";\r\nimport { HomeNavbar } from \"./HomeNavbar\";\r\nimport { ClassCard } from \"./ClassCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadAllClasses } from \"../../redux/classesSlice\";\r\nimport { getClasses } from \"../../redux/selectors\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nexport const Home = (props: Props) => {\r\n  const classes = useSelector(getClasses);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    window.scroll({ top: 0 });\r\n    dispatch(loadAllClasses());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <HomeNavbar />\r\n      <div className=\"home-body\">\r\n        <div className=\"class-card-display\">\r\n          {classes.map((c, cIx) => {\r\n            return <ClassCard classInfo={c} key={cIx} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx",["256"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./ChompClass.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { ClassNavbar } from \"./ClassNavbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getClassById, getThreads } from \"../../redux/selectors\";\r\nimport { loadClass } from \"../../redux/classesSlice\";\r\nimport { ThreadCard } from \"./ThreadCard\";\r\nimport { FilterOptions } from \"./FilterOptions\";\r\nimport { NewThread } from \"./NewThread\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nexport const ChompClass = (props: Props) => {\r\n  //@ts-ignore\r\n  const { classId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const threads = useSelector(getThreads(classId));\r\n  const currentClass = useSelector(getClassById(classId));\r\n  useEffect(() => {\r\n    dispatch(loadClass(classId));\r\n  }, []);\r\n  return currentClass ? (\r\n    <div className=\"class-page\">\r\n      <ClassNavbar classData={currentClass} />\r\n      <div className=\"class-content\">\r\n        <FilterOptions classData={currentClass} />\r\n        <ul className=\"threads-list\">\r\n          <NewThread />\r\n          {threads\r\n            .sort((a, b) => b.created.seconds - a.created.seconds)\r\n            .map((t, tIx) => (\r\n              <ThreadCard threadId={t.id} key={tIx} />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx",["257"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { SolidBtn } from \"../_common/buttons/SolidBtn\";\r\nimport { TextBtn } from \"../_common/buttons/TextBtn\";\r\nimport \"./CreateClass.css\";\r\nimport { FormField } from \"./FormField\";\r\nimport { StudentsTable } from \"./StudentsTable\";\r\nimport firebase from \"firebase/app\";\r\nimport { reauthWithGoogle } from \"../../utils/signInWithGoogle\";\r\nimport { HTTPSCourseInfo } from \"../../types/httpsTypes\";\r\nimport { GCSelectionOverlay } from \"./GCSelectionOverlay\";\r\nimport { createClassFromFirestore } from \"../../utils/firestoreFunction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addClass } from \"../../redux/classesSlice\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\nlet arr: string[] = [];\r\nexport const CreateClass = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [hidden, setHidden] = useState(true);\r\n  const [name, setName] = useState(\"\");\r\n  const [section, setSection] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [participants, setParticipants] = useState(arr);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addClass(\r\n        {\r\n          name: name.trim(),\r\n          section: section.trim(),\r\n          description: description.trim(),\r\n          participants,\r\n        },\r\n        history\r\n      )\r\n    );\r\n  };\r\n\r\n  const openOverlay = async (e: any) => {\r\n    if (accessToken.length === 0) {\r\n      reauthWithGoogle(props.user).then((res) => {\r\n        if (res.user) {\r\n          //@ts-ignore\r\n          setAccessToken(res.credential.accessToken);\r\n          setHidden(false);\r\n        }\r\n      });\r\n    } else {\r\n      setHidden(false);\r\n    }\r\n  };\r\n\r\n  const updateFromClass = (cd: HTTPSCourseInfo) => {\r\n    setName(cd.course.name);\r\n    setSection(cd.course.section);\r\n    setDescription(cd.course.description);\r\n    setParticipants(cd.roster);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-class-page\">\r\n      <GCSelectionOverlay\r\n        accessToken={accessToken}\r\n        user={props.user}\r\n        hidden={hidden}\r\n        setHidden={setHidden}\r\n        updateFromClass={updateFromClass}\r\n      />\r\n      <div className=\"create-form-wrapper\">\r\n        <div className=\"create-form\" title=\"Create Class\">\r\n          <div className=\"create-title\">\r\n            Class Details\r\n            <br />\r\n            <span className=\"small-txt\">\r\n              <SolidBtn filled onClick={async (e: any) => await openOverlay(e)}>\r\n                Create from Google Classroom\r\n              </SolidBtn>\r\n            </span>\r\n          </div>\r\n          <FormField currentValue={name} required handleChange={setName}>\r\n            Name\r\n          </FormField>\r\n          <FormField currentValue={section} handleChange={setSection}>\r\n            Section\r\n          </FormField>\r\n          <FormField currentValue={description} handleChange={setDescription}>\r\n            Description\r\n          </FormField>\r\n          <div className=\"form-buffer\" />\r\n          <div className=\"create-title\">Settings</div>\r\n          <FormField currentValue={\"\"} handleChange={() => {}}>\r\n            To Be Done Later\r\n          </FormField>\r\n          <div className=\"form-buffer\" />\r\n          <div className=\"create-title\">Participants</div>\r\n          <span className=\"small-txt\">\r\n            If a participant's account hasn't been made, a temporary account\r\n            will be. If not accessed within 1 week, this temporary account will\r\n            be deleted and removed from the roster.\r\n          </span>\r\n          <StudentsTable\r\n            participants={participants}\r\n            handleChange={setParticipants}\r\n          />\r\n          <div className=\"form-buffer\" />\r\n          <div className=\"submission-btns med-txt\">\r\n            <SolidBtn filled onClick={handleSubmit}>\r\n              Create Class\r\n            </SolidBtn>\r\n            <div>\r\n              <Link to=\"/classes\">\r\n                <TextBtn>Cancel</TextBtn>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx",["258"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./GCSelectionOverlay.css\";\r\nimport { authedRequest } from \"../../utils/authedRequest\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { HTTPSCourseInfo } from \"../../types/httpsTypes\";\r\n\r\ninterface Props {\r\n  hidden: boolean;\r\n  accessToken: string;\r\n  user: firebase.User;\r\n  setHidden: Function;\r\n  updateFromClass: Function;\r\n}\r\nconst arr: HTTPSCourseInfo[] = [];\r\nexport const GCSelectionOverlay = (props: Props) => {\r\n  const { hidden, accessToken, setHidden, updateFromClass } = props;\r\n  const [courseData, setCourseData] = useState(arr);\r\n\r\n  useEffect(() => {\r\n    if (!hidden && accessToken.length > 0) {\r\n      authedRequest(\"/get-classes\", accessToken)\r\n        .then((value) => {\r\n          if (value.status === 200) {\r\n            //@ts-ignore\r\n            const cd = value.data as HTTPSCourseInfo[];\r\n            setCourseData(cd);\r\n          } else {\r\n            console.log(`ERROR: Something went wrong.`);\r\n            setCourseData(arr);\r\n            setHidden(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(`ERROR: ${err}`);\r\n          setCourseData(arr);\r\n          setHidden(true);\r\n        });\r\n    } else {\r\n      setHidden(true);\r\n    }\r\n  }, [hidden]);\r\n\r\n  const selectClass = (e: any, c: HTTPSCourseInfo) => {\r\n    e.preventDefault();\r\n    updateFromClass(c);\r\n    setHidden(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"selection-overlay\"\r\n      onClick={(e) => {\r\n        if (e.currentTarget === e.target) setHidden(true);\r\n      }}\r\n      style={{ display: hidden ? \"none\" : \"\" }}\r\n    >\r\n      {courseData.length !== 0 ? (\r\n        <div className=\"selection-box\">\r\n          <span className=\"med-txt box-title\">Active Classes</span>\r\n          {courseData.map((course, ix) => {\r\n            return (\r\n              <button\r\n                className=\"btn-reset overlay-btn\"\r\n                onClick={(e) => selectClass(e, course)}\r\n                key={ix}\r\n              >\r\n                {course.course.name} - {course.roster.length} People\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <Spinner parentSize={100} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts",["259"],"import { Message } from \"../types/firestoreTypes\";\r\nimport { ReduxAction } from \"../types/reduxTypes\";\r\nimport {\r\n  createMessageFromFirestore,\r\n  NewMessageInput,\r\n} from \"../utils/firestoreFunction\";\r\nimport { updateStateNoRepeats } from \"../utils/updateStateNoRepeats\";\r\nimport { addMessageCreator, addThreadCreator } from \"./actionCreators\";\r\nimport { RootState } from \"./reducer\";\r\n\r\nconst initialState: Message[] = [];\r\n\r\n// Use the initialState as a default value\r\nexport default function messagesReducer(\r\n  state = initialState,\r\n  action: ReduxAction\r\n) {\r\n  switch (action.type) {\r\n    case \"threads/threadLoaded\": {\r\n      return updateStateNoRepeats(state, action.payload.messages);\r\n    }\r\n    case \"messages/messageAdded\": {\r\n      return updateStateNoRepeats(state, [action.payload.message]);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n// THUNKS\r\n\r\nexport const addNewMessage = (message: NewMessageInput) => {\r\n  return async function addNewMessageThunk(\r\n    dispatch: any,\r\n    getState: () => RootState\r\n  ) {\r\n    createMessageFromFirestore(message)\r\n      .then((m) => {\r\n        dispatch(addMessageCreator(m));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\googleClassroomSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\rosterSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\actionCreators.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\selectors.ts",["260"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateStateNoRepeats.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ThreadCard.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\FilterOptions.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\NewThread.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ChompThread.tsx",["261"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\firestoreFunction.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadInfo.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\creationDateToString.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\MessagesSection.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\Message.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\CreateThread.tsx",["262"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\TagBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\MessageDisplay.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\MarkdownRenderer.tsx",["263"],"import React, { CSSProperties, useContext } from \"react\";\r\nimport TeX from \"@matejmazur/react-katex\";\r\nimport math from \"remark-math\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport \"katex/dist/katex.min.css\";\r\nimport { DarkModeContext } from \"../../contexts\";\r\nimport \"./MarkdownRenderer.css\";\r\n\r\ninterface Props {\r\n  text: string;\r\n  height?: string;\r\n  style?: CSSProperties;\r\n}\r\n\r\nexport const MarkdownRenderer = (props: Props) => {\r\n  const { darkMode } = useContext(DarkModeContext);\r\n\r\n  const renderers = {\r\n    inlineMath: ({ value }: any) => <TeX math={value} />,\r\n    math: ({ value }: any) => <TeX math={value} block />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"markdown-renderer\"\r\n      style={{ minHeight: props.height, ...props.style }}\r\n    >\r\n      <ReactMarkdown\r\n        plugins={[math, remarkGfm]}\r\n        renderers={renderers}\r\n        children={props.text}\r\n        allowDangerousHtml={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\autoFormatMarkdown.ts",["264"],"import { wrapChars } from \"../constants\";\r\n\r\ntype EI = React.KeyboardEvent<HTMLTextAreaElement>;\r\ninterface FI {\r\n  val: string;\r\n  selStart: number;\r\n  selEnd: number;\r\n}\r\ntype FR = [string, number?, number?];\r\n\r\nexport const inputReducer = (key: string, event: EI): FR => {\r\n  const e: FI = {\r\n    val: event.currentTarget.value,\r\n    selStart: event.currentTarget.selectionStart,\r\n    selEnd: event.currentTarget.selectionEnd,\r\n  };\r\n  switch (key) {\r\n    case \"Tab\":\r\n      return handleTab(e);\r\n    case \"Backspace\":\r\n      return handleBackspace(e);\r\n    case \"Control b\":\r\n      return handleB(e);\r\n    case \"Control i\":\r\n      return handleI(e);\r\n    case \"Control `\":\r\n      return handleInlineCode(e);\r\n    case \"Control Shift ~\":\r\n      return handleCodeBlock(e);\r\n    case \"Control m\":\r\n      return handleInlineMath(e);\r\n    case \"Control Shift M\":\r\n      return handleMathBlock(e);\r\n    case \"Shift (\":\r\n      return handleParentheses(e);\r\n    case \"Shift {\":\r\n      return handleCuBrackets(e);\r\n    case \"[\":\r\n      return handleSqBrackets(e);\r\n    case 'Shift \"':\r\n      return handleDubQuotes(e);\r\n    default:\r\n      return [e.val];\r\n  }\r\n};\r\n/**\r\n * Surrounds the selected text in whatever string is passed in.\r\n *\r\n * If a second string is passed, the beginning is wrapped in str1, end is wrapped in str2\r\n */\r\nconst surround = (e: FI, surr: string, endWrap?: string) => {\r\n  return (\r\n    e.val.substring(0, e.selStart) +\r\n    surr +\r\n    e.val.substring(e.selStart, e.selEnd) +\r\n    (endWrap ? endWrap : surr) +\r\n    e.val.substring(e.selEnd)\r\n  );\r\n};\r\n\r\nconst handleEnter = (e: FI): FR => {\r\n  console.log(e.selStart);\r\n  let lines = e.val.split(\"\\n\");\r\n  let lineIx = 0;\r\n  let charIx = 0;\r\n  while (charIx < e.selStart && charIx < e.val.length) {\r\n    lineIx += e.val[charIx] === \"\\n\" ? 1 : 0;\r\n    charIx++;\r\n  }\r\n  const spaces = lines[lineIx].match(/\\s*(?=(\\S|\\n))/);\r\n  const pre = spaces ? spaces[0] : \"\";\r\n  lines = lines.slice(0, lineIx + 1).concat([pre, ...lines.slice(lineIx + 1)]);\r\n  const startingIx =\r\n    e.val.indexOf(lines[lineIx]) + lines[lineIx].length + pre.length + 1;\r\n\r\n  return [lines.join(\"\\n\"), startingIx, startingIx];\r\n};\r\n\r\nconst handleTab = (e: FI): FR => {\r\n  return [\r\n    e.val.substring(0, e.selStart) + \"\\t\" + e.val.substring(e.selStart),\r\n    e.selStart + 1,\r\n    e.selEnd + 1,\r\n  ];\r\n};\r\n\r\n/**\r\n * If wrapped by special characters (Such as brackets or quotes), delete both sides. Else do a normal backspace.\r\n */\r\nconst handleBackspace = (e: FI): FR => {\r\n  const fourChar = e.val.substring(e.selStart - 2, e.selEnd + 2); //Need to check if these vals exist first, causing bugs with deletion (Not too major, though)\r\n  const twoChar = e.val.substring(e.selStart - 1, e.selEnd + 1);\r\n  if (e.selStart !== e.selEnd) {\r\n    return [\r\n      e.val.substring(0, e.selStart) + e.val.substring(e.selEnd),\r\n      e.selStart,\r\n      e.selStart,\r\n    ];\r\n  } else if (wrapChars.includes(fourChar)) {\r\n    return [\r\n      e.val.substring(0, e.selStart - 2) + e.val.substring(e.selEnd + 2),\r\n      e.selStart - 2,\r\n      e.selStart - 2,\r\n    ];\r\n  } else if (wrapChars.includes(twoChar)) {\r\n    return [\r\n      e.val.substring(0, e.selStart - 1) + e.val.substring(e.selEnd + 1),\r\n      e.selStart - 1,\r\n      e.selStart - 1,\r\n    ];\r\n  } else\r\n    return [\r\n      e.val.substring(0, e.selStart - 1) + e.val.substring(e.selStart),\r\n      e.selStart - 1,\r\n      e.selStart - 1,\r\n    ];\r\n};\r\n\r\n//#region Simple Formats\r\nconst handleB = (e: FI): FR => {\r\n  return [surround(e, \"**\"), e.selStart + 2, e.selEnd + 2];\r\n};\r\nconst handleI = (e: FI): FR => {\r\n  return [surround(e, \"*\"), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleParentheses = (e: FI): FR => {\r\n  return [surround(e, \"(\", \")\"), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleSqBrackets = (e: FI): FR => {\r\n  return [surround(e, \"[\", \"]\"), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleCuBrackets = (e: FI): FR => {\r\n  return [surround(e, \"{\", \"}\"), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleDubQuotes = (e: FI): FR => {\r\n  return [surround(e, '\"'), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleInlineCode = (e: FI): FR => {\r\n  return [surround(e, \"`\"), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleCodeBlock = (e: FI): FR => {\r\n  return [\r\n    e.val.slice(0, e.selStart) + \"```\\n\\n```\" + e.val.slice(e.selStart),\r\n    e.selStart + 4,\r\n    e.selEnd + 4,\r\n  ];\r\n};\r\nconst handleInlineMath = (e: FI): FR => {\r\n  return [surround(e, \"$\"), e.selStart + 1, e.selEnd + 1];\r\n};\r\nconst handleMathBlock = (e: FI): FR => {\r\n  return [\r\n    e.val.slice(0, e.selStart) + \"$$\\n\\n$$\" + e.val.slice(e.selStart),\r\n    e.selStart + 3,\r\n    e.selEnd + 3,\r\n  ];\r\n};\r\n//#endregion\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ReplySection.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\StyledToggle.tsx",["265","266"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateFirestore.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ThreadTag.tsx",[],{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"267","replacedBy":"271"},{"ruleId":"269","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":20,"column":6,"nodeType":"275","endLine":20,"endColumn":8,"suggestions":"276"},{"ruleId":"273","severity":1,"message":"277","line":27,"column":6,"nodeType":"275","endLine":27,"endColumn":8,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":12,"column":10,"nodeType":"281","messageId":"282","endLine":12,"endColumn":34},{"ruleId":"273","severity":1,"message":"283","line":42,"column":6,"nodeType":"275","endLine":42,"endColumn":14,"suggestions":"284"},{"ruleId":"279","severity":1,"message":"285","line":8,"column":29,"nodeType":"281","messageId":"282","endLine":8,"endColumn":45},{"ruleId":"279","severity":1,"message":"286","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":15},{"ruleId":"273","severity":1,"message":"287","line":22,"column":6,"nodeType":"275","endLine":22,"endColumn":8,"suggestions":"288"},{"ruleId":"273","severity":1,"message":"277","line":30,"column":6,"nodeType":"275","endLine":30,"endColumn":8,"suggestions":"289"},{"ruleId":"279","severity":1,"message":"290","line":17,"column":11,"nodeType":"281","messageId":"282","endLine":17,"endColumn":19},{"ruleId":"279","severity":1,"message":"291","line":61,"column":7,"nodeType":"281","messageId":"282","endLine":61,"endColumn":18},{"ruleId":"279","severity":1,"message":"292","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":12},{"ruleId":"279","severity":1,"message":"293","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":16},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],["294"],["295"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["296"],"React Hook useEffect has missing dependencies: 'classId' and 'dispatch'. Either include them or remove the dependency array.",["297"],"@typescript-eslint/no-unused-vars","'createClassFromFirestore' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'accessToken' and 'setHidden'. Either include them or remove the dependency array.",["298"],"'addThreadCreator' is defined but never used.","'store' is defined but never used.","React Hook useEffect has missing dependencies: 'classId', 'dispatch', and 'threadId'. Either include them or remove the dependency array.",["299"],["300"],"'darkMode' is assigned a value but never used.","'handleEnter' is assigned a value but never used.","'edit' is defined but never used.","'markdown' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"303","fix":"309"},"Update the dependencies array to be: [dispatch]",{"range":"310","text":"311"},"Update the dependencies array to be: [classId, dispatch]",{"range":"312","text":"313"},"Update the dependencies array to be: [accessToken, hidden, setHidden]",{"range":"314","text":"315"},"Update the dependencies array to be: [classId, dispatch, threadId]",{"range":"316","text":"317"},{"range":"318","text":"313"},[616,618],"[dispatch]",[952,954],"[classId, dispatch]",[1307,1315],"[accessToken, hidden, setHidden]",[823,825],"[classId, dispatch, threadId]",[1187,1189]]