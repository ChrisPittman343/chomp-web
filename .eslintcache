[{"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx":"1","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts":"2","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx":"3","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx":"4","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx":"5","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx":"6","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\index\\Index.tsx":"7","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\index\\IndexNavbar.tsx":"8","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts":"9","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts":"10","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts":"11","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx":"12","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx":"13","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx":"14"},{"size":552,"mtime":1608942073962,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1608876895992,"results":"17","hashOfConfig":"16"},{"size":3123,"mtime":1609095174210,"results":"18","hashOfConfig":"16"},{"size":797,"mtime":1609008225468,"results":"19","hashOfConfig":"16"},{"size":588,"mtime":1609045619889,"results":"20","hashOfConfig":"16"},{"size":316,"mtime":1609035342041,"results":"21","hashOfConfig":"16"},{"size":300,"mtime":1609007725610,"results":"22","hashOfConfig":"16"},{"size":1007,"mtime":1609104399281,"results":"23","hashOfConfig":"16"},{"size":335,"mtime":1608963668145,"results":"24","hashOfConfig":"16"},{"size":424,"mtime":1609096949667,"results":"25","hashOfConfig":"16"},{"size":658,"mtime":1609007043190,"results":"26","hashOfConfig":"16"},{"size":653,"mtime":1609103787452,"results":"27","hashOfConfig":"16"},{"size":409,"mtime":1609103776097,"results":"28","hashOfConfig":"16"},{"size":406,"mtime":1609104378491,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1bocc8l",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx",[],["60","61"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx",["62","63"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Footer } from \"./components/_common/Footer\";\nimport { Index } from \"./components/index/Index\";\nimport { IndexNavbar } from \"./components/index/IndexNavbar\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { firebaseConfig } from \"./constants\";\nimport { DarkModeContext, UserContext } from \"./contexts\";\nimport { toggleColorScheme } from \"./utils/toggleColorScheme\";\nimport axios from \"axios\";\n\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user, loading, error] = useAuthState(auth);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope(\n      \"https://www.googleapis.com/auth/classroom.courses.readonly\"\n    );\n    provider.addScope(\n      \"https://www.googleapis.com/auth/classroom.rosters.readonly\"\n    );\n    provider.addScope(\n      \"https://www.googleapis.com/auth/classroom.profile.emails\"\n    );\n    provider.addScope(\n      \"https://www.googleapis.com/auth/classroom.profile.photos\"\n    );\n    auth.signInWithRedirect(provider).then((value) => {\n      console.log(value);\n    });\n  };\n\n  const toggleDarkMode = () => {\n    toggleColorScheme(darkMode);\n    setDarkMode(!darkMode);\n  };\n\n  auth.getRedirectResult().then((result) => {\n    if (result.user) {\n      //@ts-ignore\n      const accessToken: string = result.credential.accessToken;\n      const refreshToken: string = result.user.refreshToken;\n      axios\n        .post(\n          \"https://us-central1-chomp-chat.cloudfunctions.net/widgets/get-classes\",\n          {},\n          {\n            headers: { Authorization: accessToken },\n          }\n        )\n        .then((value) => {\n          console.log(value);\n        });\n    }\n  });\n\n  return (\n    <DarkModeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      <UserContext.Provider value={{ user, loading, error }}>\n        <Router>\n          <div className=\"App\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                children={\n                  <>\n                    <IndexNavbar />\n                    {user ? (\n                      <>\n                        Currently Signed in as: {user.email}\n                        <br />\n                        <button onClick={() => auth.signOut()}>Sign Out</button>\n                      </>\n                    ) : (\n                      <button onClick={() => signInWithGoogle()}>\n                        Sign in with Google\n                      </button>\n                    )}\n                    <Index />\n                  </>\n                }\n              />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </UserContext.Provider>\n    </DarkModeContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\index\\Index.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\index\\IndexNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":18,"column":7,"nodeType":"70","messageId":"71","endLine":18,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":52,"column":13,"nodeType":"70","messageId":"71","endLine":52,"endColumn":33},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'firestore' is assigned a value but never used.","Identifier","unusedVar","'refreshToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]