[{"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx":"1","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts":"2","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx":"3","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx":"4","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx":"5","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx":"6","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts":"7","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts":"8","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts":"9","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx":"10","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx":"11","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx":"12","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx":"13","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts":"14","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx":"15","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx":"16","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx":"17","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx":"18","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx":"19","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx":"20","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx":"21","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx":"22","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx":"23","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx":"24","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx":"25","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx":"26","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts":"27","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx":"28","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx":"29","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts":"30","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts":"31","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts":"32","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts":"33","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts":"34","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts":"35","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts":"36","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\googleClassroomSlice.ts":"37","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\rosterSlice.ts":"38","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\actionCreators.ts":"39","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\selectors.ts":"40","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateStateNoRepeats.ts":"41","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ThreadCard.tsx":"42","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\FilterOptions.tsx":"43","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\NewThread.tsx":"44","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ChompThread.tsx":"45","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\firestoreFunction.ts":"46","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadNavbar.tsx":"47","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadInfo.tsx":"48","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\creationDateToString.ts":"49","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\MessagesSection.tsx":"50","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\Message.tsx":"51","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\CreateThread.tsx":"52","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\TagBtn.tsx":"53","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\MessageDisplay.tsx":"54","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\MarkdownRenderer.tsx":"55","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\autoFormatMarkdown.ts":"56","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ReplySection.tsx":"57","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\StyledToggle.tsx":"58","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateFirestore.ts":"59","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ThreadTag.tsx":"60","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\votesSlice.ts":"61","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\firebase.ts":"62","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\errorsSlice.ts":"63","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\errorDisplay\\ErrorDisplay.tsx":"64","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\errorDisplay\\errorDisplay.tsx":"65"},{"size":678,"mtime":1610870472551,"results":"66","hashOfConfig":"67"},{"size":425,"mtime":1608876895992,"results":"68","hashOfConfig":"67"},{"size":2951,"mtime":1611775525304,"results":"69","hashOfConfig":"67"},{"size":292,"mtime":1609204568653,"results":"70","hashOfConfig":"67"},{"size":631,"mtime":1611776500287,"results":"71","hashOfConfig":"67"},{"size":375,"mtime":1610177504263,"results":"72","hashOfConfig":"67"},{"size":916,"mtime":1610644284124,"results":"73","hashOfConfig":"67"},{"size":434,"mtime":1610040662195,"results":"74","hashOfConfig":"67"},{"size":658,"mtime":1609213692759,"results":"75","hashOfConfig":"67"},{"size":793,"mtime":1609106587289,"results":"76","hashOfConfig":"67"},{"size":409,"mtime":1609103776097,"results":"77","hashOfConfig":"67"},{"size":532,"mtime":1609204745335,"results":"78","hashOfConfig":"67"},{"size":546,"mtime":1610939591252,"results":"79","hashOfConfig":"67"},{"size":1526,"mtime":1609950239822,"results":"80","hashOfConfig":"67"},{"size":936,"mtime":1610870865395,"results":"81","hashOfConfig":"67"},{"size":2912,"mtime":1610304912979,"results":"82","hashOfConfig":"67"},{"size":821,"mtime":1610067126219,"results":"83","hashOfConfig":"67"},{"size":530,"mtime":1609266417016,"results":"84","hashOfConfig":"67"},{"size":633,"mtime":1610551321549,"results":"85","hashOfConfig":"67"},{"size":645,"mtime":1610080754955,"results":"86","hashOfConfig":"67"},{"size":805,"mtime":1610044364978,"results":"87","hashOfConfig":"67"},{"size":1584,"mtime":1611178650425,"results":"88","hashOfConfig":"67"},{"size":4158,"mtime":1611196594022,"results":"89","hashOfConfig":"67"},{"size":987,"mtime":1609525784060,"results":"90","hashOfConfig":"67"},{"size":1567,"mtime":1609396915709,"results":"91","hashOfConfig":"67"},{"size":408,"mtime":1609395434622,"results":"92","hashOfConfig":"67"},{"size":640,"mtime":1609977366921,"results":"93","hashOfConfig":"67"},{"size":2255,"mtime":1611178398358,"results":"94","hashOfConfig":"67"},{"size":766,"mtime":1610598431597,"results":"95","hashOfConfig":"67"},{"size":4044,"mtime":1611195915280,"results":"96","hashOfConfig":"67"},{"size":296,"mtime":1610860891249,"results":"97","hashOfConfig":"67"},{"size":715,"mtime":1611774471815,"results":"98","hashOfConfig":"67"},{"size":794,"mtime":1610309510733,"results":"99","hashOfConfig":"67"},{"size":2645,"mtime":1611109607539,"results":"100","hashOfConfig":"67"},{"size":2930,"mtime":1611647737101,"results":"101","hashOfConfig":"67"},{"size":1531,"mtime":1611647739311,"results":"102","hashOfConfig":"67"},{"size":1335,"mtime":1610068982523,"results":"103","hashOfConfig":"67"},{"size":612,"mtime":1610039983478,"results":"104","hashOfConfig":"67"},{"size":3047,"mtime":1611774739386,"results":"105","hashOfConfig":"67"},{"size":1771,"mtime":1611774648289,"results":"106","hashOfConfig":"67"},{"size":401,"mtime":1611720645283,"results":"107","hashOfConfig":"67"},{"size":2557,"mtime":1611445005078,"results":"108","hashOfConfig":"67"},{"size":426,"mtime":1610171376312,"results":"109","hashOfConfig":"67"},{"size":734,"mtime":1610310169848,"results":"110","hashOfConfig":"67"},{"size":1258,"mtime":1611178623468,"results":"111","hashOfConfig":"67"},{"size":1963,"mtime":1611205013891,"results":"112","hashOfConfig":"67"},{"size":734,"mtime":1610598426588,"results":"113","hashOfConfig":"67"},{"size":1085,"mtime":1610955867157,"results":"114","hashOfConfig":"67"},{"size":1122,"mtime":1610258300553,"results":"115","hashOfConfig":"67"},{"size":1622,"mtime":1610938476587,"results":"116","hashOfConfig":"67"},{"size":3791,"mtime":1611445727721,"results":"117","hashOfConfig":"67"},{"size":3328,"mtime":1610939562986,"results":"118","hashOfConfig":"67"},{"size":549,"mtime":1610317472614,"results":"119","hashOfConfig":"67"},{"size":2217,"mtime":1610956839531,"results":"120","hashOfConfig":"67"},{"size":881,"mtime":1611198840986,"results":"121","hashOfConfig":"67"},{"size":4751,"mtime":1611196574399,"results":"122","hashOfConfig":"67"},{"size":1724,"mtime":1610745245727,"results":"123","hashOfConfig":"67"},{"size":920,"mtime":1611196397286,"results":"124","hashOfConfig":"67"},{"size":4963,"mtime":1611672803123,"results":"125","hashOfConfig":"67"},{"size":457,"mtime":1611448086234,"results":"126","hashOfConfig":"67"},{"size":2586,"mtime":1611647749304,"results":"127","hashOfConfig":"67"},{"size":346,"mtime":1611196254043,"results":"128","hashOfConfig":"67"},{"size":377,"mtime":1611775676928,"results":"129","hashOfConfig":"67"},{"size":841,"mtime":1611813467185,"results":"130","hashOfConfig":"67"},{"size":396,"mtime":1611775473769,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1bocc8l",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"134"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"134"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\index.tsx",[],["271","272"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\reportWebVitals.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\App.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\NavbarContainer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Footer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ChompTitle.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\constants.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\contexts.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\toggleColorScheme.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ProfilePicture.tsx",[],["273","274"],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\Spinner.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\TextBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\buttons\\SolidBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\signInWithGoogle.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\Home.tsx",["275"],"import React, { useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./Home.css\";\r\nimport { HomeNavbar } from \"./HomeNavbar\";\r\nimport { ClassCard } from \"./ClassCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadAllClasses } from \"../../redux/classesSlice\";\r\nimport { getClasses } from \"../../redux/selectors\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nexport const Home = (props: Props) => {\r\n  const classes = useSelector(getClasses);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    window.scroll({ top: 0 });\r\n    dispatch(loadAllClasses());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <HomeNavbar />\r\n      <div className=\"home-body\">\r\n        <div className=\"class-card-display\">\r\n          {classes.map((c, cIx) => {\r\n            return <ClassCard classInfo={c} key={cIx} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Landing.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\BasicAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\landing\\Feature.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\HomeNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\home\\ClassCard.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\routes\\ClassAuthRoute.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ChompClass.tsx",["276"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./ChompClass.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { ClassNavbar } from \"./ClassNavbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getClassById, getThreads } from \"../../redux/selectors\";\r\nimport { loadClass } from \"../../redux/classesSlice\";\r\nimport { ThreadCard } from \"./ThreadCard\";\r\nimport { FilterOptions } from \"./FilterOptions\";\r\nimport { NewThread } from \"./NewThread\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nexport const ChompClass = (props: Props) => {\r\n  //@ts-ignore\r\n  const { classId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const threads = useSelector(getThreads(classId));\r\n  const currentClass = useSelector(getClassById(classId));\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0 });\r\n    dispatch(loadClass(classId));\r\n  }, []);\r\n  return currentClass ? (\r\n    <div className=\"class-page\">\r\n      <ClassNavbar classData={currentClass} />\r\n      <div className=\"class-content\">\r\n        <FilterOptions classData={currentClass} />\r\n        <ul className=\"threads-list\">\r\n          <NewThread />\r\n          {threads\r\n            .sort((a, b) => b.created.seconds - a.created.seconds)\r\n            .map((t, tIx) => (\r\n              <ThreadCard threadId={t.id} key={tIx} />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\CreateClass.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\FormField.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentsTable.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\StudentRow.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\authedRequest.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createClass\\GCSelectionOverlay.tsx",["277"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"./GCSelectionOverlay.css\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport { GCCourseInfo } from \"../../types/firestoreTypes\";\r\nimport { fetchGoogleClassroom } from \"../../utils/firestoreFunction\";\r\n\r\ninterface Props {\r\n  hidden: boolean;\r\n  accessToken: string;\r\n  user: firebase.User;\r\n  setHidden: Function;\r\n  updateFromClass: Function;\r\n}\r\nconst arr: GCCourseInfo[] = [];\r\nexport const GCSelectionOverlay = (props: Props) => {\r\n  const { hidden, accessToken, setHidden, updateFromClass } = props;\r\n  const [courseData, setCourseData] = useState(arr);\r\n\r\n  useEffect(() => {\r\n    if (!hidden && accessToken.length > 0) {\r\n      fetchGoogleClassroom(accessToken)\r\n        .then((data) => {\r\n          //Some kind of error must have occured\r\n          if (data.code) onFail();\r\n          const cd = data as GCCourseInfo[];\r\n          setCourseData(cd);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          onFail();\r\n        });\r\n    } else {\r\n      setHidden(true);\r\n    }\r\n  }, [hidden]);\r\n\r\n  const selectClass = (e: any, c: GCCourseInfo) => {\r\n    e.preventDefault();\r\n    updateFromClass(c);\r\n    setHidden(true);\r\n  };\r\n\r\n  const onFail = () => {\r\n    setCourseData(arr);\r\n    setHidden(true);\r\n    //Display some fail text telling the user that something went wrong, and to try again later.\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"selection-overlay\"\r\n      onClick={(e) => {\r\n        if (e.currentTarget === e.target) setHidden(true);\r\n      }}\r\n      style={{ display: hidden ? \"none\" : \"\" }}\r\n    >\r\n      {courseData.length !== 0 ? (\r\n        <div className=\"selection-box\">\r\n          <span className=\"med-txt box-title\">Active Classes</span>\r\n          {courseData.map((course, ix) => {\r\n            return (\r\n              <button\r\n                className=\"btn-reset overlay-btn\"\r\n                onClick={(e) => selectClass(e, course)}\r\n                key={ix}\r\n              >\r\n                {course.course.name} - {course.roster.length} People\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <Spinner parentSize={100} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ClassNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\fetchFromFirestore.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\store.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\reducer.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\types\\errors.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\classesSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\threadsSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\messagesSlice.ts",["278"],"import { threadId } from \"worker_threads\";\r\nimport { Message } from \"../types/firestoreTypes\";\r\nimport { ReduxAction } from \"../types/reduxTypes\";\r\nimport {\r\n  createMessageFromFirestore,\r\n  NewMessageInput,\r\n} from \"../utils/firestoreFunction\";\r\nimport { updateStateNoRepeats } from \"../utils/updateStateNoRepeats\";\r\nimport { addMessageCreator } from \"./actionCreators\";\r\nimport { RootState } from \"./reducer\";\r\n\r\nconst initialState: Message[] = [];\r\n\r\n// Use the initialState as a default value\r\nexport default function messagesReducer(\r\n  state = initialState,\r\n  action: ReduxAction\r\n) {\r\n  switch (action.type) {\r\n    case \"threads/threadLoaded\": {\r\n      return updateStateNoRepeats(state, action.payload.messages);\r\n    }\r\n    case \"messages/messageAdded\": {\r\n      return updateStateNoRepeats(state, [action.payload.message]);\r\n    }\r\n    case \"messages/messageVoted\": {\r\n      const oldMessage = action.payload.message;\r\n      const updatedMessage = {\r\n        ...oldMessage,\r\n        score: oldMessage.score + action.payload.change,\r\n      } as Message;\r\n      return updateStateNoRepeats(state, [updatedMessage]);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n// THUNKS\r\n\r\nexport const addNewMessage = (message: NewMessageInput) => {\r\n  return async function addNewMessageThunk(\r\n    dispatch: any,\r\n    getState: () => RootState\r\n  ) {\r\n    createMessageFromFirestore(message)\r\n      .then((m) => {\r\n        dispatch(addMessageCreator(m));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\googleClassroomSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\rosterSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\actionCreators.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\selectors.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateStateNoRepeats.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\ThreadCard.tsx",["279"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getThreadById, getVoteOnThread } from \"../../redux/selectors\";\r\nimport { voteThread } from \"../../redux/votesSlice\";\r\nimport { creationDateToString } from \"../../utils/creationDateToString\";\r\nimport { ThreadTag } from \"../_common/ThreadTag\";\r\nimport \"./ThreadCard.css\";\r\n\r\ninterface Props {\r\n  threadId: string;\r\n}\r\nexport const ThreadCard = (props: Props) => {\r\n  const thread = useSelector(getThreadById(props.threadId));\r\n  const vote = useSelector(getVoteOnThread(props.threadId));\r\n  const dispatch = useDispatch();\r\n\r\n  const onVote = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    vote: 1 | -1\r\n  ) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (thread) dispatch(voteThread(thread, vote));\r\n  };\r\n\r\n  if (!thread) return <></>;\r\n  else {\r\n    const { answerId, isClosed } = thread;\r\n    const stateClass =\r\n      !isClosed && answerId\r\n        ? \"thread-open-resolved\"\r\n        : isClosed && !answerId\r\n        ? \"thread-closed-unresolved\"\r\n        : isClosed && answerId\r\n        ? \"thread-closed-resolved\"\r\n        : \"thread-open-unresolved\";\r\n    return (\r\n      <a href={`/class/c/${thread.classId}/t/${thread.id}`}>\r\n        <li className={`thread-card ${stateClass}`}>\r\n          <div className=\"thread-head tiny-txt\">\r\n            <span className=\"sent-by\">Created by {thread.email}</span>\r\n            <span className=\"num-messages\">{thread.numMessages} messages</span>\r\n            <span className=\"created-on\">\r\n              Posted {creationDateToString(thread.created)}\r\n            </span>\r\n          </div>\r\n          <div className=\"thread-main med-txt\">\r\n            <div className=\"thread-score\">\r\n              <button\r\n                onClick={(e) => onVote(e, 1)}\r\n                className={`vote-btn ${vote === 1 ? \"current-upvote\" : \"\"}`}\r\n              >\r\n                ▲\r\n              </button>\r\n              <button>{thread.score}</button>\r\n              <button\r\n                onClick={(e) => onVote(e, -1)}\r\n                className={`vote-btn ${vote === -1 ? \"current-downvote\" : \"\"}`}\r\n              >\r\n                ▼\r\n              </button>\r\n            </div>\r\n            <div className=\"thread-title\">\r\n              {thread.title}\r\n              {thread.tags?.map((t, tIx) => (\r\n                <ThreadTag tag={t} key={tIx} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </a>\r\n    );\r\n  }\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\FilterOptions.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\class\\NewThread.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ChompThread.tsx",["280"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getThreadById } from \"../../redux/selectors\";\r\nimport { loadThread } from \"../../redux/threadsSlice\";\r\nimport { Footer } from \"../_common/Footer\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport \"./ChompThread.css\";\r\nimport { MessagesSection } from \"./MessagesSection\";\r\nimport { ThreadInfo } from \"./ThreadInfo\";\r\nimport { ThreadNavbar } from \"./ThreadNavbar\";\r\n\r\ninterface Props {}\r\n\r\nexport const ChompThread = (props: Props) => {\r\n  //@ts-ignore\r\n  const { classId, threadId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const thread = useSelector(getThreadById(threadId));\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0 });\r\n    dispatch(loadThread(classId, threadId));\r\n  }, []);\r\n  return thread ? (\r\n    <>\r\n      <div className=\"thread-page\">\r\n        <ThreadNavbar thread={thread} />\r\n        <div className=\"thread-page-content\">\r\n          <ThreadInfo thread={thread} />\r\n          <MessagesSection thread={thread} />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\firestoreFunction.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadNavbar.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ThreadInfo.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\creationDateToString.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\MessagesSection.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\Message.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\CreateThread.tsx",["281"],"/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { loadOnlyClass } from \"../../redux/classesSlice\";\r\nimport { getClassById } from \"../../redux/selectors\";\r\nimport { addNewThread } from \"../../redux/threadsSlice\";\r\nimport { FormField } from \"../createClass/FormField\";\r\nimport { SolidBtn } from \"../_common/buttons/SolidBtn\";\r\nimport { TextBtn } from \"../_common/buttons/TextBtn\";\r\nimport { Spinner } from \"../_common/Spinner\";\r\nimport \"./CreateThread.css\";\r\nimport { MessageDisplay } from \"./MessageDisplay\";\r\nimport { TagBtn } from \"./TagBtn\";\r\n\r\ninterface Props {}\r\n\r\nexport const CreateThread = (props: Props) => {\r\n  //@ts-ignore\r\n  const { classId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const c = useSelector(getClassById(classId));\r\n  const [title, setTitle] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [tags, setTags] = useState([] as string[]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadOnlyClass(classId));\r\n  }, []);\r\n\r\n  const createNewThread = async () => {\r\n    dispatch(\r\n      addNewThread(\r\n        {\r\n          classId: classId,\r\n          title: title.trim(),\r\n          message: message.trim(),\r\n          tags,\r\n        },\r\n        history\r\n      )\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param b value ? add tag to list : remove tag from list\r\n   */\r\n  const toggleTag = (b: boolean, tag: string) => {\r\n    if (b) {\r\n      const newList = [...tags];\r\n      newList.push(tag);\r\n      setTags(newList);\r\n    } else setTags(tags.filter((t) => t !== tag));\r\n  };\r\n\r\n  return c ? (\r\n    <div className=\"create-thread-page\">\r\n      <div className=\"create-thread-container\">\r\n        <FormField\r\n          currentValue={title}\r\n          handleChange={setTitle}\r\n          required\r\n          children=\"Thread Title\"\r\n        />\r\n        <div>\r\n          <label htmlFor=\"thread message\" className=\"bold normal-txt\">\r\n            Message <br /> <br />\r\n          </label>\r\n          <MessageDisplay value={message} setValue={setMessage} />{\" \"}\r\n        </div>\r\n        <div className=\"tag-section\">\r\n          <div className=\"bold\" style={{ paddingBottom: 10 }}>\r\n            Tags\r\n          </div>\r\n          <div className=\"tag-list\">\r\n            {c.tags?.map((t, tIx) => (\r\n              <TagBtn key={tIx} tag={t} toggleTag={(b) => toggleTag(b, t)} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"anonymous-section\">\r\n          <span className=\"bold\">Appear Anonymous*</span>\r\n          <br />{\" \"}\r\n          <span className=\"tiny-txt\">\r\n            *Administrators can choose to view anonymous posts, but they will\r\n            still count towards participation.\r\n          </span>\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <Link to={`/class/c/${classId}`}>\r\n            {\" \"}\r\n            <TextBtn>Cancel</TextBtn>\r\n          </Link>\r\n          <SolidBtn filled onClick={async () => await createNewThread()}>\r\n            Create Thread\r\n          </SolidBtn>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Spinner parentSize={70} style={{ margin: \"auto\", marginTop: 70 }} />\r\n  );\r\n};\r\n","C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\TagBtn.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\createThread\\MessageDisplay.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\MarkdownRenderer.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\autoFormatMarkdown.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\thread\\ReplySection.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\StyledToggle.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\utils\\updateFirestore.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\ThreadTag.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\votesSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\firebase.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\redux\\errorsSlice.ts",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\errorDisplay\\ErrorDisplay.tsx",[],"C:\\Users\\ChrisP\\Chomp\\chomp-web\\src\\components\\_common\\errorDisplay\\errorDisplay.tsx",["282"],{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"283","replacedBy":"287"},{"ruleId":"285","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":20,"column":6,"nodeType":"291","endLine":20,"endColumn":8,"suggestions":"292"},{"ruleId":"289","severity":1,"message":"293","line":28,"column":6,"nodeType":"291","endLine":28,"endColumn":8,"suggestions":"294"},{"ruleId":"289","severity":1,"message":"295","line":36,"column":6,"nodeType":"291","endLine":36,"endColumn":14,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":1,"column":10,"nodeType":"299","messageId":"300","endLine":1,"endColumn":18},{"ruleId":"297","severity":1,"message":"301","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"302","line":23,"column":6,"nodeType":"291","endLine":23,"endColumn":8,"suggestions":"303"},{"ruleId":"289","severity":1,"message":"293","line":30,"column":6,"nodeType":"291","endLine":30,"endColumn":8,"suggestions":"304"},{"ruleId":"297","severity":1,"message":"305","line":9,"column":9,"nodeType":"299","messageId":"300","endLine":9,"endColumn":14},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],["306"],["307"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["308"],"React Hook useEffect has missing dependencies: 'classId' and 'dispatch'. Either include them or remove the dependency array.",["309"],"React Hook useEffect has missing dependencies: 'accessToken', 'onFail', and 'setHidden'. Either include them or remove the dependency array.",["310"],"@typescript-eslint/no-unused-vars","'threadId' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'classId', 'dispatch', and 'threadId'. Either include them or remove the dependency array.",["311"],["312"],"'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"315","fix":"321"},"Update the dependencies array to be: [dispatch]",{"range":"322","text":"323"},"Update the dependencies array to be: [classId, dispatch]",{"range":"324","text":"325"},"Update the dependencies array to be: [accessToken, hidden, onFail, setHidden]",{"range":"326","text":"327"},"Update the dependencies array to be: [classId, dispatch, threadId]",{"range":"328","text":"329"},{"range":"330","text":"325"},[616,618],"[dispatch]",[986,988],"[classId, dispatch]",[1106,1114],"[accessToken, hidden, onFail, setHidden]",[857,859],"[classId, dispatch, threadId]",[1187,1189]]